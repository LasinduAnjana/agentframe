[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "agentframe"
version = "0.1.0"
description = "A framework for building LLM agents with planning and tool integration"
authors = [
    {name = "AgentFrame Contributors", email = "contributors@agentframe.dev"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
keywords = ["llm", "agents", "langchain", "langgraph", "ai", "openai", "gemini", "claude"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]

dependencies = [
    "langgraph>=0.0.20",
    "langchain-core>=0.1.0",
    "langchain-openai>=0.0.5",
    "langchain-google-genai>=0.0.5",
    "langchain-anthropic>=0.1.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.5.0"
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0"
]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0"
]

[project.urls]
Homepage = "https://github.com/agentframe/agentframe"
Repository = "https://github.com/agentframe/agentframe"
Documentation = "https://agentframe.github.io/agentframe"
Issues = "https://github.com/agentframe/agentframe/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
agentframe = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["S101", "S311", "COM812", "ISC001"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests"
]